// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.uca.iw.uj2016.dominio;

import es.uca.iw.uj2016.dominio.Demandante;
import es.uca.iw.uj2016.dominio.Empresa;
import es.uca.iw.uj2016.dominio.RolUsuario;
import es.uca.iw.uj2016.dominio.Usuario;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

privileged aspect Usuario_Roo_DbManaged {
    
    @OneToMany(mappedBy = "idUsuario", cascade = CascadeType.ALL)
    private Set<Demandante> Usuario.demandantes;
    
    @OneToMany(mappedBy = "idUsuario", cascade = CascadeType.ALL)
    private Set<Empresa> Usuario.empresas;
    
    @ManyToOne
    @JoinColumn(name = "id_rol_usuario", referencedColumnName = "id", nullable = false)
    private RolUsuario Usuario.idRolUsuario;
    
    @Column(name = "nombre", length = 32, unique = true)
    @NotNull
    private String Usuario.nombre;
    
    @Column(name = "password", length = 128)
    @NotNull
    private String Usuario.password;
    
    public Set<Demandante> Usuario.getDemandantes() {
        return demandantes;
    }
    
    public void Usuario.setDemandantes(Set<Demandante> demandantes) {
        this.demandantes = demandantes;
    }
    
    public Set<Empresa> Usuario.getEmpresas() {
        return empresas;
    }
    
    public void Usuario.setEmpresas(Set<Empresa> empresas) {
        this.empresas = empresas;
    }
    
    public RolUsuario Usuario.getIdRolUsuario() {
        return idRolUsuario;
    }
    
    public void Usuario.setIdRolUsuario(RolUsuario idRolUsuario) {
        this.idRolUsuario = idRolUsuario;
    }
    
    public String Usuario.getNombre() {
        return nombre;
    }
    
    public void Usuario.setNombre(String nombre) {
        this.nombre = nombre;
    }
    
    public String Usuario.getPassword() {
        return password;
    }
    
    public void Usuario.setPassword(String password) {
        PasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
        String encodedPassword = passwordEncoder.encode(password);
        this.password = encodedPassword;
    }
    
}
